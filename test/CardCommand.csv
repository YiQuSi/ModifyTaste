id,description,//comment,quoteDescription,effectCode,remapCode,,,,,,,,,,,,,,,,,,,,,,,,,
DecreaseHp,减少{0}HP,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IncreaseHp,增加{0}HP,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DecreaseEnergy,减少{0}能量,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IncreaseEnergy,增加{0}能量,,,122,,,,,,,,,,,,,,,,,,,,,,,,,,
TakeDamage,受到{0}伤害,,,FlickerRed:;Shake:;1|1_1|1_2,,,,,,,,,,,,,,,,,,,,,,,,,,
Heal,回复{0}HP,,,3,,,,,,,,,,,,,,,,,,,,,,,,,,
DrawCard,抽卡{cn:0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UseThisCard,使用这张卡,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UseCard,使用卡片{cn:0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AddBuff,增加{1}层{cn:0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RemoveBuff,移除{1}层{cn:0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DrawThisCard,抽到这张卡,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
StartTurn,开始回合,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
EndTurn,结束回合,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HasBuff,有Buff{cn:0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
If,"如果{0}{opt:1,'，就'}{1}{opt:2,'，否则'}{2}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Else,否则{0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
>,{0}>{1},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<,{0}<{1},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
>=,{0}≥{1},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<=,{0}≤{1},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
==,{0}={1},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
!=,{0}≠{1},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
+,{0}＋{1},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
-,{0}－{1},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
*,{0}×{1},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/,{0}÷{1},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GreaterThan,{0}>{1},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
LessThan,{0}<{1},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GreaterThanOrEqualTo,{0}≥{1},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
LessThanOrEqualTo,{0}≤{1},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
EqualTo,{0}={1},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NotEqualTo,{0}≠{1},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Plus,{0}＋{1},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Minus,{0}－{1},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Multiply,{0}×{1},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Divide,{0}÷{1},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetPercent,{0}%,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_hp,HP,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_maxHp,最大HP,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_energy,能量,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_maxEnergy,最大能量,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_egy,能量,,,,get_energy:,,,,,,,,,,,,,,,,,,,,,,,,,
get_hpP,HP,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_egyP,能量,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
evt,当,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
enemy,敌人,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
emy,敌人,enemy的简化,,,,,,,,,,,,,,,,,,,,,,,,,,,,
teammate,同伴,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tmt,同伴,teammate的简化,,,,,,,,,,,,,,,,,,,,,,,,,,,,
target,目标,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tgt,目标,target的简化,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_tgt,目标,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
self,自己,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
slf,自己,self的简化,,,,,,,,,,,,,,,,,,,,,,,,,,,,
team,全队,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BuffCount,{cn:0}层数,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Repeat,重复{0}次{1},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
user,使用者,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HpIsFull,HP是满的,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RemoveThisBuff,"移除这个Buff{0}{opt:0,层}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_corresponding,对应,相当于arg0，这是旧版没有arg0时加的指令，现在用arg0就行了,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_crspd,对应,相当于arg0，这是旧版没有arg0时加的指令，现在用arg0就行了,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DrawCardOrCreate,抽卡{cn:0},DrawCardsByCount,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ArgIsCard,是{cn:0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IfArgIsCard,如果是{cn:0},,,,If:{ArgIsCard:$0},,,,,,,,,,,,,,,,,,,,,,,,,
SenderCardHasTag,发送者卡牌有标签{0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Chance,有{0}的机率{1},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HandCardFull,手牌满的,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IfNot,"如果不是{0}{opt:1,'，就'}{1}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_handCardCountP,手牌数百分比,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_handCardCount,手牌数,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_maxHandCardCount,最大手牌数,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IncreaseMaxHp,增加{0}最大HP,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DecreaseMaxHp,减少{0}最大HP,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
atker,攻击者,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
applier,施加者,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
sender,事件发送者,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_sender,事件发送者,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
attacker,攻击者,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Revive,复活,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RunCard,执行{cn:0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MultiplyBuffCountBy,将{cn:0}数乘以{1},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_isDied,死亡了,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ApplierIsTeammate,施加者是队友,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rng,射程{0}格,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
range,射程{0}格,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SpreadRun,{qte:扩散}{0}格{1},"变种1:取得范围{0}的单位，每个都执行{1}
变种2:取得以坐标{0}为中心，范围{1}的单位，每个都执行{2}
变种3，支持更多参数：
例子：SpreadRun:{
 position:$selPos;//中心位置
 radius:0;//圆形形状的半径，如果写了shapeTextureId，radius就没用了，可以写0，可以不写
 shapeTextureId:1;//自定义形状贴图id，可以通过一张贴图来自定义扩散的形状，贴图位置：RangeShapeTexture/XXX.png。
 direction:{GetDirection:$user.position,$selPos};//形状的朝向，用于自定义形状，如果使用的是圆形，那这个就没啥意义
 allowEmptyGround:true;//是否允许对着空地执行
 action:{//执行操作
  Log:$tgt;
 };
};",卡片效果会同时应用到周围的单位,,,,,,,,,,,,,,,,,,,,,,,,,,,
Sprd,{qte:扩散}{0}格{1},SpreadRun的简写,卡片效果会同时应用到周围的单位,,"SpreadRun:$0,$1",,,,,,,,,,,,,,,,,,,,,,,,,
ConvertBuff,将每{1}层{cn:0}转换为{3}层{cn:2},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TakePushForceFromUser,受到来自使用者的{0}推力,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TakePullForceFromUser,受到来自使用者的{0}拉力,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TakePushForceFromSelectedPosition,受到来自选定位置的{0}推力,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TakePushForceFromSelPos,受到来自选定位置的{0}推力,,,,TakePushForceFromSelectedPosition:$0,,,,,,,,,,,,,,,,,,,,,,,,,
TakePullForceFromSelectedPosition,受到来自选定位置的{0}拉力,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TakePullForceFromSelPos,受到来自选定位置的{0}拉力,,,,TakePullForceFromSelectedPosition:$0,,,,,,,,,,,,,,,,,,,,,,,,,
SelectHandCardToDiscard,"从手牌选{0}{opt:0,张}卡丢弃",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
StartCombat,开始战斗,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SerialRun,{0},Serial是串行的意思（一帧只能运行一次），相对于并行（一帧可以同时运行多次）,即使同时被执行多次（比如叠加多个Buff），也只允许一次是有效的,,,,,,,,,,,,,,,,,,,,,,,,,,,
SelectDeckCardToDraw,"从牌库选{0}{opt:0,张}卡抽到手中",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SelectCardToDestroyForever,"选{0}{opt:0,张}卡{qte:永久销毁}",,永久销毁对应卡，本场游戏不会再次抽到,,,,,,,,,,,,,,,,,,,,,,,,,,,
DrawThisCardOnStartCombat,{qte:始抽},,当开始战斗，这张卡会被抽到,,evt.StartCombat:{DrawThisCard:},,,,,,,,,,,,,,,,,,,,,,,,,
UseThisCardForSelf,为自己使用这张卡,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DashToSelPos,"向选定位置冲刺{0}{opt:0,格}",,,,TakePullForceFromSelectedPosition:$0,,,,,,,,,,,,,,,,,,,,,,,,,
ThisBuffCountIsZero,这个Buff数为零,,,,"<=:{BuffCount:$cardId},0",,,,,,,,,,,,,,,,,,,,,,,,,
Explode,产生范围{0}伤害{1}的爆炸,,,6;ShakeCamera:,Sprd:$0{TakeDamage:$1},,,,,,,,,,,,,,,,,,,,,,,,,
AddThisBuff,增加这个Buff{0}层,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CountdownRun,倒计时{0}回合后{1},,,,"AddThisBuff:$0;evt.StartTurn:{SerialRun:{RemoveThisBuff:1;If:{ThisBuffCountIsZero:},$1}}",,,,,,,,,,,,,,,,,,,,,,,,,
get_stamina,体力,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_maxStamina,最大{0}体力,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IncreaseStamina,增加{0}体力,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DecreaseStamina,减少{0}体力,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IncreaseMaxStamina,增加{0}最大体力,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DecreaseMaxStamina,减少{0}最大体力,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DieAfterTurnCount,计时{0}回合死亡,,,,"evt.StartTurn:{>=:$buffHost.chaTurnCountSinceStart,$0}{buffHost.Die:}",,,,,,,,,,,,,,,,,,,,,,,,,
RemoveAllBuffs,"移除所有Buff{0}{opt:0,层}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ImmuneAllDebuffs,免疫所有Debuff,,,,"evt.AddBuff:{ArgCardHasTag:Debuff}{RemoveBuff:$arg0,$arg1}",,,,,,,,,,,,,,,,,,,,,,,,,
BlackholeGravity,{qte:黑洞引力},,当开始回合，附近的单位会被吸引,,evt.EndTurn:{Sprd:8{TakePullForceFromUser:3}},,,,,,,,,,,,,,,,,,,,,,,,,
ImmuneDamage,免疫受到伤害,,,,evt.PreTakeDamage:{CreaserAvoidNext:TakeDamage},,,,,,,,,,,,,,,,,,,,,,,,,
get_selPos,选中位置,,,,$selectedPosition,,,,,,,,,,,,,,,,,,,,,,,,,
CreateNeutralCharacter,在{1}生成{cha:0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CreateNeutralChaAt,在{1}生成{cha:0},,,,"CreateNeutralCharacter:$0,$1",,,,,,,,,,,,,,,,,,,,,,,,,
CreateCha,在{1}生成{cha:0},,,,"CreateNeutralCharacter:$0,$1",,,,,,,,,,,,,,,,,,,,,,,,,
CreateEnemy,在{1}生成{cha:0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CreateTeammate,在{1}生成{cha:0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CreateTmt,在{1}生成{cha:0},,,,"CreateTeammate:$0,$1",,,,,,,,,,,,,,,,,,,,,,,,,
SwapPositionWith,与{0}互换位置,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetClosestTeammate,最近的队友,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Die,死亡,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ShowEffect,,生成特效{0},,,,,,,,,,,,,,,,,,,,,,,,,,,,
Vfx,,生成特效{0},,,ShowEffect:$0,,,,,,,,,,,,,,,,,,,,,,,,,
PreTakeDamage,即将受到伤害,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ApplyShield,每层护盾抵挡一次伤害,,,,evt.PreTakeDamage:{SerialRun:{CreaserAvoidNext:TakeDamage;RemoveThisBuff:1}},,,,,,,,,,,,,,,,,,,,,,,,,
RemoveHalfOfThisBuff,移除一半这个Buff,,,,"RemoveThisBuff:{/:{BuffCount:$cardId},2}",,,,,,,,,,,,,,,,,,,,,,,,,
buffHost,Buff宿主,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DrawOneCard,抽一张卡,,,,DrawCard:,,,,,,,,,,,,,,,,,,,,,,,,,
ThisBuffCount,这个Buff数,,,,BuffCount:$cardId,,,,,,,,,,,,,,,,,,,,,,,,,
IsTeammateOf,是{0}的队友,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_user,使用者,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MaxBuffCountLimit,{qte:Buff上限}{0},,这个Buff不会叠加超过指定数量,,"evt.AddBuff:{And:{ArgIsCard:$cardId}{>:{BuffCount:$cardId},$0}}{RemoveBuff:$cardId,{-:{BuffCount:$cardId},$0}}",,,,,,,,,,,,,,,,,,,,,,,,,
TeamRun,{qte:友军}{0},,只有目标与使用者在同一队伍，功能才会生效,,"{If:{tgt.IsSameTeamWith:$user},{$0}}",,,,,,,,,,,,,,,,,,,,,,,,,
RemoveAllBuffsByTag,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RemoveAllDebuffs,移除所有Debuff卡{0}层,,,,"RemoveAllBuffsByTag:Debuff,$0",,,,,,,,,,,,,,,,,,,,,,,,,
RemoveAllPosiBuffs,移除所有正面BUFF卡{0}层,,,,"RemoveAllBuffsByTag:PosiBuff,$0",,,,,,,,,,,,,,,,,,,,,,,,,
HandCardCount,手牌{cn:0}数量,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DiscardHandCard,丢弃{cn:0}手牌,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DiscardHandCardByIndex,丢弃序号是{0}的手牌,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DiscardHandCards,丢弃{1}张{cn:0}手牌,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DiscardAllHandCards,丢弃所有手牌,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DiscardAllHandCardsById,丢弃所有{cn:0}手牌,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ArgIsThisCardAndBuffCountGreaterThan,,,,,"And:{EqualsCard:$arg0,$cardId},{>:{BuffCount:$arg0},$0}",,,,,,,,,,,,,,,,,,,,,,,,,
And,{0}和{1},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Or,{0}或{1},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_arg0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_arg1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_arg2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_arg3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_cardId,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_card,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_selectedPosition,选中位置,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IsSameTeamWith,和{0}在同一个队伍里,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ConvertHandCards,手牌每{1}张{cn:0}将转换成{3}张{cn:2},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Spread,扩散{0}格,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DrawCardsByCount,抽{0}张卡,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DiscardAllHandCardAndDrawSameCount,丢弃所有手牌，然后抽同样数量的,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DiscardFirstHandCard,丢弃第一张手牌,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_userPosition,使用者的位置,,,,$user.position,,,,,,,,,,,,,,,,,,,,,,,,,
get_position,位置,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
EvtAddBuff,当增加{cn:0}，{1},,,,evt.AddBuff:{SenderCardIsId:$0}{$1},,,,,,,,,,,,,,,,,,,,,,,,,
PreApplyDamage,造成伤害之前,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IncreaseApplyDamageValue,当造成伤害，伤害值增加{0},,,,"evt.PreApplyDamage:{CreaserIncreaseNext:ApplyDamage,$0}",,,,,,,,,,,,,,,,,,,,,,,,,
DecreaseTakeDamageValue,当受到伤害，伤害值减少{0},,,,"evt.PreTakeDamage:{CreaserDecreaseNext:TakeDamage,$0}",,,,,,,,,,,,,,,,,,,,,,,,,
AddThisDefenceBuff,添加防御力{0}层，每层减少{1}伤害,,,,AddThisBuff:$0;IncreaseDefence:$1;,,,,,,,,,,,,,,,,,,,,,,,,,
AddThisDamageBuff,添加攻击力{0}层，每层增加{1}伤害,,,,AddThisBuff:$0;IncreaseDamage:$1;,,,,,,,,,,,,,,,,,,,,,,,,,
AddBuffUntil,每回合增加{1}层{cn:0}，直到{2}层后{3},,,,"evt.StartTurn:{AddBuff:$0,$1;{If:{>=:{BuffCount:$0},$2}{$3}}}",,,,,,,,,,,,,,,,,,,,,,,,,
TakeRepelFromSelPos,被击退{0}格,,,,TakePushForceFromSelPos:$0,,,,,,,,,,,,,,,,,,,,,,,,,
TakeRepel,被击退{0}格,,,,TakePushForceFromUser:$0,,,,,,,,,,,,,,,,,,,,,,,,,
ImmuneBuff,免疫{cn:0},,,,evt.PreAddBuff:{ArgIsCard:$0}{CreaserAvoidNext:AddBuff},,,,,,,,,,,,,,,,,,,,,,,,,
EvtApplyBuff,当应用{cn:0}，{1},,,,evt.ApplyBuff:{SenderCardIsId:$0}$1,,,,,,,,,,,,,,,,,,,,,,,,,
IncreaseApplyBuffCount,{qte:助推}{1}层{cn:0},,当应用相应Buff时，应用的Buff数量将增加,,"EvtPreApplyBuff:$0,{CreaserIncreaseNext:ApplyBuff,$1}",,,,,,,,,,,,,,,,,,,,,,,,,
EvtPreApplyBuff,,,,,evt.PreApplyBuff:{IfArgIsCard:$0}$1,,,,,,,,,,,,,,,,,,,,,,,,,
CreaserAvoidNext,避开即将的{cmd:0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CreaserIncreaseNext,将下次{cmd:0}增加{1},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CreaserDecreaseNext,将下次{cmd:0}减少{1},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UseCardsByIdNotReqEnergy,使用所有手牌的{cn:0},,,,Repeat:{HandCardCount:$0}{UseCardNotReqEnergy:$0};,,,,,,,,,,,,,,,,,,,,,,,,,
UseCardNotReqEnergy,使用卡片{0}（无需能量）,,,,SetNextUseCardEnergyReq:0;UseCard:$0,,,,,,,,,,,,,,,,,,,,,,,,,
SetNextUseCardEnergyReq,设置下一张卡片的使用能量需求为{0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UseAllBulletCards,对目标使用手上所有{ylw:子弹类型}的牌,,,,"SetLocalVar:index,0;Foreach:{SearchCards:{list:Hand;tag:Bullet}}{DelayUpcomingEffects:$index*0.2,{SetNextUseCardEnergyReq:0;UseCardIns:$ctx0};PlusLocalVar:index,1;};",,,,,,,,,,,,,,,,,,,,,,,,,
UseCardByFilterNotReqEnergy,,,,,SetNextUseCardEnergyReq:0;UseCardByFilter:$0,,,,,,,,,,,,,,,,,,,,,,,,,
Consumable,{qte:消耗品},,使用后会销毁卡片，当前战斗不再抽到,,evt.PreUseThisCard:{user.DestroyThisCard:},,,,,,,,,,,,,,,,,,,,,,,,,
OneOffCard,{qte:一次性卡牌},,使用后会永久销毁，整场游戏不再抽到,,evt.PreUseThisCard:{user.DestroyThisCardForever:},,,,,,,,,,,,,,,,,,,,,,,,,
UseCardByFilter,使用卡片{cmd:0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetHandCardCountByFilter,{cmd:0}手牌数,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DestroyThisCard,{qte:销毁}这张卡,,销毁卡片，本场战斗不会再次抽到,,,,,,,,,,,,,,,,,,,,,,,,,,,
DestroyThisCardForever,{qte:永久销毁}这张卡,,永久销毁对应卡，本场游戏不会再次抽到,,,,,,,,,,,,,,,,,,,,,,,,,,,
ImmuneAllBuffs,免疫所有Buff,,,,evt.PreAddBuff:{CreaserAvoidNext:AddBuff},,,,,,,,,,,,,,,,,,,,,,,,,
Equipment,{qte:装备卡},,当得到这张卡片后，它的效果就会一直存在,,evt.StartCombat:{AddBuff:$cardId;user.DestroyThisCard:};DestroyThisCard:;,,,,,,,,,,,,,,,,,,,,,,,,,
TakeDragFromUser,被拖拽至使用者位置,,,,TakePullForceFromUser:,,,,,,,,,,,,,,,,,,,,,,,,,
TakeDragFromSelPos,被拖拽至选中位置,,,,TakePullForceFromSelPos:,,,,,,,,,,,,,,,,,,,,,,,,,
KillAllChasById,杀死所有{cha:0}单位,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NearbyRemoveBuff,移除附近{0}格单位的{cn:1}{2}层,,,,"Sprd:$0{tgt.RemoveBuff:$1,$2}",,,,,,,,,,,,,,,,,,,,,,,,,
AgedBuff,{0}{qte:时效}{1},,每回合开始执行一次对应功能，直到Buff数归零,,AddThisBuff:$0;evt.StartTurn:{SerialRun:{$1;RemoveThisBuff:1}},,,,,,,,,,,,,,,,,,,,,,,,,
AddThisAgedBuff,{0}{qte:时效}{1},,每回合开始执行一次对应功能，直到Buff数归零,,AddThisBuff:$0;evt.StartTurn:{SerialRun:{$1;RemoveThisBuff:1}},,,,,,,,,,,,,,,,,,,,,,,,,
CreateHandCards,生成{1}张手牌{cn:0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RemoveBuffByPercent,移除{cn:0}{1}层,,,,"RemoveBuff:$0,{*:{BuffCount:$0},$1}",,,,,,,,,,,,,,,,,,,,,,,,,
RemoveThisBuffByPercent,移除这个Buff{0}层,,,,"RemoveBuff:$cardId,{*:{BuffCount:$cardId},$0}",,,,,,,,,,,,,,,,,,,,,,,,,
DecayBuff,每回合开始衰减{0}层,,,,evt.StartTurn:{SerialRun:{RemoveThisBuff:$0}},,,,,,,,,,,,,,,,,,,,,,,,,
DecayBuffByPercent,每回合开始衰减{0}层,,,,evt.StartTurn:{SerialRun:{RemoveThisBuffByPercent:$0}},,,,,,,,,,,,,,,,,,,,,,,,,
get_chaTurnCountSinceStart,单位的回合数,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IncreaseApplyHealValue,每当造成回复效果时，回复量增加{0},,,,"evt.PreApplyHeal:{CreaserIncreaseNext:ApplyHeal,$0}",,,,,,,,,,,,,,,,,,,,,,,,,
TransferEnergyPFromUser,接受使用者{0}的能量,,,,IncreaseEnergy:$user.energy*$0;user.DecreaseEnergy:$user.energy*$0,,,,,,,,,,,,,,,,,,,,,,,,,
TransferStaminaPFromUser,接受使用者{0}的体力,,,,IncreaseStamina:$user.stamina*$0;user.DecreaseStamina:$user.stamina*$0,,,,,,,,,,,,,,,,,,,,,,,,,
TransferHpPFromUser,接受使用者{0}的Hp,,,,IncreaseHp:$user.hp*$0;user.DecreaseHp:$user.hp*$0,,,,,,,,,,,,,,,,,,,,,,,,,
ConvertHpPToEgyAndSta,将{0}Hp转换成{1}能量和{2}体力,,,,IncreaseEnergy:$1;IncreaseStamina:$2;DecrHpP:$0,,,,,,,,,,,,,,,,,,,,,,,,,
DecrHpP,减少{0}HP,,,,"DecreaseHp:{*:$maxHp,$0}",,,,,,,,,,,,,,,,,,,,,,,,,
IncrHpP,增加{0}HP,,,,"IncreaseHp:{*:$maxHp,$0}",,,,,,,,,,,,,,,,,,,,,,,,,
IncrEgyP,增加{0}能量,,,,"IncreaseEnergy:{*:$maxEnergy,$0}",,,,,,,,,,,,,,,,,,,,,,,,,
IncrStaP,增加{0}体力,,,,"IncreaseStamina:{*:$maxStamina,$0}",,,,,,,,,,,,,,,,,,,,,,,,,
DecreaseDecreaseHpValue,每当损失HP，损失量减少{0},,,,"evt.PreDecreaseHp:{CreaserDecreaseNext:DecreaseHp,$0};",,,,,,,,,,,,,,,,,,,,,,,,,
KeepHandCardsOnEndTurn,回合结束后保留手牌,,,,evt.PreEndTurn:{AvoidNextDiscardAllHandCardsOnEndTurn:};,,,,,,,,,,,,,,,,,,,,,,,,,
PreEndTurn,结束回合,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AvoidNextDiscardAllHandCardsOnEndTurn,避免下次游戏结束的时候丢弃手牌,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SelfDestructSystem,战斗开始{0}回合后，全场死亡,,,,CountdownRun:$0{Sprd:99{Repeat:2{Die:}}};evt.EndTurn:{SerialRun:{user.SetToNotable:;ShowUIMessageStrip:'警告：自毁程序即将启动！'}};ImmuneAllBuffs:;ImmuneDamage:,,,,,,,,,,,,,,,,,,,,,,,,,
SetToNotable,,设置为值得注意的，用于将环境物体设置得有存在感,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_attacker,攻击者,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_buffHost,Buff宿主,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ShowUIMessageStrip,{0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IncreaseChanceValue,增加{0}{qte:运气},,每当使用带机率的卡牌时，机率增加对应值,,"evt.PreChance:{CreaserIncreaseNext:Chance,$0};",,,,,,,,,,,,,,,,,,,,,,,,,
DecreaseChanceValue,减少{0}{qte:运气},,每当使用带机率的卡牌时，机率减少对应值,,"evt.PreChance:{CreaserDecreaseNext:Chance,$0};",,,,,,,,,,,,,,,,,,,,,,,,,
MultiplyChanceValue,{qte:运气}×{0},,每当使用带机率的卡牌时，机率乘以对应值,,"evt.PreChance:{CreaserMultiplyNext:Chance,$0};",,,,,,,,,,,,,,,,,,,,,,,,,
EvtUseCard,当使用{cn:0}，{1},,,,evt.UseCard:{IfArgIsCard:$0}{$1},,,,,,,,,,,,,,,,,,,,,,,,,
IfNotHandCardFull,如果手牌不是满的,,,,IfNot:HandCardFull:,,,,,,,,,,,,,,,,,,,,,,,,,
DisallowAddThisBuffAgain,无法叠加,,,,"evt.PreAddBuff:{And:{EqualsCard:$arg0,$cardId}{>:{BuffCount:$arg0},0}}{CreaserAvoidNext:AddBuff}",,,,,,,,,,,,,,,,,,,,,,,,,
ConsumerByTag,{cmd:0}类{qte:消耗装置},,每当使用指定类型的卡牌，它将被消耗,,evt.UseCard:{SenderCardHasTag:$0}{DestroyCardIns:$senderCard},,,,,,,,,,,,,,,,,,,,,,,,,
Bullet,子弹,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IncreaseDamageByTag,{cmd:0}类卡牌增加{1}伤害,,,,"evt.PreApplyDamage:{SenderCardHasTag:$0}{CreaserIncreaseNext:ApplyDamage,$1}",,,,,,,,,,,,,,,,,,,,,,,,,
GiveAllHandCardsByTagToSel,将手上所有{cmd:0}类卡牌给予选中的单位,,,,"GiveCardsByFilterTo:$selectedTarget,{list:Hand;tag:$0}",,,,,,,,,,,,,,,,,,,,,,,,,
JoinStr,连接字符串{0}{1},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SenderCardIsId,事件发送者的卡牌是{cn:0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GiveCardsByFilterTo,将手上所有{filter:1}卡牌给予{0}单位,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_selectedTarget,选中的目标,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DestroyCardIns,销毁卡牌{0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_senderCard,事件发送者的卡牌,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MultiplyApplyDamageValueByTag,{cmd:0}类卡牌的伤害乘以{1},,,,"evt.PreApplyDamage:{SenderCardHasTag:$0}{CreaserMultiplyNext:ApplyDamage,$1}",,,,,,,,,,,,,,,,,,,,,,,,,
MultiplyApplyBuffCountByTag,{cmd:0}类卡牌造成的BUFF数乘以{1},,,,"evt.PreApplyBuff:{SenderCardHasTag:$0}{CreaserMultiplyNext:ApplyBuff,$1}",,,,,,,,,,,,,,,,,,,,,,,,,
GetDistanceFromUser,到使用者的距离,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CreaserMultiplyNext,将下次{cmd:0}乘以{1},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MultiplyApplyDamageAndBuffByTag,{cmd:0}类卡牌造成的伤害和BUFF数乘以{1},,,,"MultiplyApplyDamageValueByTag:$0,$1;MultiplyApplyBuffCountByTag:$0,$1",,,,,,,,,,,,,,,,,,,,,,,,,
ShopDiscount,原石加工器消耗的原石将折扣{percent:0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ApplyDamage,造成伤害,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DecreaseApplyDamageValue,当造成伤害，伤害值减少{0},,,,"evt.PreApplyDamage:{CreaserDecreaseNext:ApplyDamage,$0}",,,,,,,,,,,,,,,,,,,,,,,,,
MultiplyApplyDamageValue,卡牌的造成的伤害乘以{0},,,,"evt.PreApplyDamage:{CreaserMultiplyNext:ApplyDamage,$0}",,,,,,,,,,,,,,,,,,,,,,,,,
ArgCardHasTag,参数卡牌拥有标签{0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UsingCardHasTag,正在使用的卡牌拥有标签{0},,,,"CardHasTag:$usingCard,$0",,,,,,,,,,,,,,,,,,,,,,,,,
GetDistance,{0}到{1}距离,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DrawCardsForStartTurn,开始回合抽卡,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UseAllBoxingCards,对目标使用手上所有{ylw:拳类}卡牌,,,,"SetLocalVar:index,0;Foreach:{SearchCards:{list:Hand;tag:Boxing}}{DelayUpcomingEffects:$index*0.2,{SetNextUseCardEnergyReq:0;UseCardIns:$ctx0};PlusLocalVar:index,1;};",,,,,,,,,,,,,,,,,,,,,,,,,
Boxing,拳,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Log,显示日志{0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_usingCard,当前正在使用的卡牌,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DecreaseAllStamina,减少所有体力,,,,DecreaseStamina:$stamina,,,,,,,,,,,,,,,,,,,,,,,,,
RandomFloat,从{0}到{1}的随机浮点数,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RandomInt,从{0}到{1}的随机整数（不包含{1}）,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CardHasTag,卡牌{0}有标签{1},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IncreaseMaxHpForever,永久增加{0}最大HP,,,,IncreaseMaxHp:$0;IncreaseMaxHpInArchive:$0,,,,,,,,,,,,,,,,,,,,,,,,,
IncreaseMaxEnergyForever,永久增加{0}最大能量,,,,IncreaseMaxEnergy:$0;IncreaseMaxEnergyInArchive:$0,,,,,,,,,,,,,,,,,,,,,,,,,
IncreaseMaxStaminaForever,永久增加{0}最大体力,,,,IncreaseMaxStamina:$0;IncreaseMaxStaminaInArchive:$0,,,,,,,,,,,,,,,,,,,,,,,,,
DecreaseMaxHpForever,永久减少{0}最大HP,,,,DecreaseMaxHp:$0;DecreaseMaxHpInArchive:$0,,,,,,,,,,,,,,,,,,,,,,,,,
DecreaseMaxEnergyForever,永久减少{0}最大能量,,,,DecreaseMaxEnergy:$0;DecreaseMaxEnergyInArchive:$0,,,,,,,,,,,,,,,,,,,,,,,,,
DecreaseMaxStaminaForever,永久减少{0}最大体力,,,,DecreaseMaxStamina:$0;DecreaseMaxStaminaInArchive:$0,,,,,,,,,,,,,,,,,,,,,,,,,
IncreaseMaxHpForeverWithCur,永久增加{0}最大HP,除了最大值，也包含了当前值,,,IncreaseMaxHpForever:$0;IncreaseHp:$0,,,,,,,,,,,,,,,,,,,,,,,,,
IncreaseMaxEnergyForeverWithCur,永久增加{0}最大能量,除了最大值，也包含了当前值,,,IncreaseMaxEnergyForever:$0;IncreaseEnergy:$0,,,,,,,,,,,,,,,,,,,,,,,,,
IncreaseMaxStaminaForeverWithCur,永久增加{0}最大体力,除了最大值，也包含了当前值,,,IncreaseMaxStaminaForever:$0;IncreaseStamina:$0,,,,,,,,,,,,,,,,,,,,,,,,,
DecreaseMaxHpForeverWithCur,永久减少{0}最大HP,除了最大值，也包含了当前值,,,DecreaseMaxHpForever:$0;DecreaseHp:$0,,,,,,,,,,,,,,,,,,,,,,,,,
DecreaseMaxEnergyForeverWithCur,永久减少{0}最大能量,除了最大值，也包含了当前值,,,DecreaseMaxEnergyForever:$0;DecreaseEnergy:$0,,,,,,,,,,,,,,,,,,,,,,,,,
DecreaseMaxStaminaForeverWithCur,永久减少{0}最大体力,除了最大值，也包含了当前值,,,DecreaseMaxStaminaForever:$0;DecreaseStamina:$0,,,,,,,,,,,,,,,,,,,,,,,,,
IncreaseMaxHpWithCur,增加{0}最大HP,除了最大值，也包含了当前值,,,IncreaseMaxHp:$0;IncreaseHp:$0,,,,,,,,,,,,,,,,,,,,,,,,,
IncreaseMaxEnergyWithCur,增加{0}最大能量,除了最大值，也包含了当前值,,,IncreaseMaxEnergy:$0;IncreaseEnergy:$0,,,,,,,,,,,,,,,,,,,,,,,,,
IncreaseMaxStaminaWithCur,增加{0}最大体力,除了最大值，也包含了当前值,,,IncreaseMaxStamina:$0;IncreaseStamina:$0,,,,,,,,,,,,,,,,,,,,,,,,,
SaveMaxHp,保存最大Hp到存档,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SaveMaxEnergy,保存最大能量到存档,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SaveMaxStamina,保存最大体力到存档,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CharacterHasTag,{cha:0}有标签{1},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Max,从{0}和{1}当中返回最大的一个,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Min,从{0}和{1}当中返回最小的一个,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ImmuneDamageByChanceAndDistance,有{0}的机率免疫来自{1}格外的伤害,,,,"evt.PreTakeDamage:{And:{>:{GetDistance:$user,$attacker},$1},{Chance:$0}}{CreaserAvoidNext:TakeDamage}",,,,,,,,,,,,,,,,,,,,,,,,,
ImmuneBuffByChanceAndDistance,有{0}的机率免疫来自{1}格外的Buff,,,,"evt.PreAddBuff:{And:{>:{GetDistance:$user,$attacker},$1},{Chance:$0}}{CreaserAvoidNext:AddBuff}",,,,,,,,,,,,,,,,,,,,,,,,,
ImmuneDamageAndBuffByChanceAndDistance,有{0}的机率免疫来自{1}格外的伤害和Buff,,,,"ImmuneDamageByChanceAndDistance:$0,$1;ImmuneBuffByChanceAndDistance:$0,$1",,,,,,,,,,,,,,,,,,,,,,,,,
IncreaseTakeDamageValue,当受到伤害，伤害值增加{0},,,,"evt.PreTakeDamage:{CreaserIncreaseNext:TakeDamage,$0}",,,,,,,,,,,,,,,,,,,,,,,,,
get_firstHandCard,第一张手牌,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetCardId,返回卡牌{cn:0}的Id,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IncreaseApplyDamageValueByTag,当{cmd:0}类卡牌造成伤害，伤害值增加{1},,,,"evt.PreApplyDamage:{SenderCardHasTag:$0}{CreaserIncreaseNext:ApplyDamage,$1}",,,,,,,,,,,,,,,,,,,,,,,,,
IsEnemyOf,是{0}的敌人,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IncreaseMaxHpInArchive,增加{0}的存档最大Hp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DecreaseMaxHpInArchive,减少{0}的存档最大Hp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IncreaseMaxStaminaInArchive,增加{0}的存档最大体力,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DecreaseMaxStaminaInArchive,减少{0}的存档最大体力,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IncreaseMaxEnergyInArchive,增加{0}的存档最大能量,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DecreaseMaxEnergyInArchive,减少{0}的存档最大能量,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IncreasePlayerMoneyInArchive,增加{0}的玩家存档原石,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DecreasePlayerMoneyInArchive,减少{0}的玩家存档原石,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IncreasePlayerMoneyForever,永久增加{0}的玩家原石,,,,IncreasePlayerMoneyInArchive:$0,,,,,,,,,,,,,,,,,,,,,,,,,
DecreasePlayerMoneyForever,永久减少{0}的玩家原石,,,,DecreasePlayerMoneyInArchive:$0,,,,,,,,,,,,,,,,,,,,,,,,,
IncreasePlayerMoneyForeverWithMsg,永久增加{0}的玩家原石,,,,"SetLocalVar:v,$0;IncreasePlayerMoneyForever:{GetLocalVar:v};MsgStrip:'得到了{ylw:0}原石',{GetLocalVar:v}",,,,,,,,,,,,,,,,,,,,,,,,,
get_playerMoneyInArchive,玩家的原石数,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IncreaseMaxEnergy,增加{1}最大能量,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DecreaseMaxEnergy,减少{1}最大能量,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//0.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
receiver,接收者,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_receiver,接收者,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
selTgt,选中的目标,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_ctx0,上下文0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_ctx1,上下文1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_ctx2,上下文2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Debuff,负面Buff,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PosiBuff,正面Buff,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Count,{0}的数量,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetRandomElement,列表{0}中的随机一个元素,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SearchCards,查找全部{filter:0}卡牌,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SearchCard,查找{filter:0}卡牌,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SelectCardTo,选择{2}张{1}中的卡牌执行{0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Invincible,免疫所有伤害和负面Buff,,,,ImmuneDecreaseHp:;ImmuneAllDebuffs:;,,,,,,,,,,,,,,,,,,,,,,,,,
ImmuneDecreaseHp,免疫减少HP,,,,evt.PreDecreaseHp:{CreaserAvoidNext:DecreaseHp},,,,,,,,,,,,,,,,,,,,,,,,,
SearchHandCardsByTag,查找{cmd:0}类的手牌,,,,SearchCards:{list:Hand;tag:$0},,,,,,,,,,,,,,,,,,,,,,,,,
SearchDbCardsByTag,在总卡池里查找{cmd:0}类的卡牌,,,,SearchCards:{list:Db;tag:$0},,,,,,,,,,,,,,,,,,,,,,,,,
SearchBuffsByTag,查找全部{cmd:0}类Buff,,,,SearchCards:{list:Buff;tag:$0},,,,,,,,,,,,,,,,,,,,,,,,,
SearchRandomDbCardsByTag,在卡池里查找{filter:0}随机卡牌,,,,SearchCards:{list:Db;random:;tag:$0},,,,,,,,,,,,,,,,,,,,,,,,,
CreateHandCardsByTagInDbRandom,随机生成{1}张{cmd:0}类手牌,,,,"CreateHandCards:{SearchCard:{list:Db;random:;tag:$0}},$1",,,,,,,,,,,,,,,,,,,,,,,,,
SelectDbCardsByTagTo,选择{2}张总卡池中{cmd:1}类的卡牌{0},,,,"SelectCardTo:$0,{SearchDbCardsByTag:$1},$2",,,,,,,,,,,,,,,,,,,,,,,,,
SelectDbCardsByTagToCreateToHand,选择{1}张总卡池中{cmd:0}类的卡牌加入到手牌,,,,"SelectDbCardsByTagTo:{CreateHandCards:$ctx0,1},$0,$1",,,,,,,,,,,,,,,,,,,,,,,,,
SelectDeckCardsByTagToCreateToHand,选择{1}张牌库中{cmd:0}类的卡牌生成到手牌,,,,"SelectCardTo:{CreateHandCards:$ctx0,1},{SearchCards:{list:Deck;tag:$0}},$1",,,,,,,,,,,,,,,,,,,,,,,,,
SelectDeckCardsByTagToDrawToHand,选择{1}张牌库中{cmd:0}类的卡牌抽到手牌,,,,"SelectCardTo:{DrawCardIns:$ctx0},{SearchCards:{list:Deck;tag:$0}},$1",,,,,,,,,,,,,,,,,,,,,,,,,
TakePullForceFromCha,受到来自{0}的{1}拉力,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TakePushForceFromCha,受到来自{0}的{1}推力,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetBuffCountByTag,{cmd:0}类的Buff数,,,,Count:{SearchBuffsByTag:$0},,,,,,,,,,,,,,,,,,,,,,,,,
Foreach,遍历{0}执行{1},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CreateHandCardsByTagInDbAll,生成所有{cmd:0}类的卡牌到手上,,,,"Foreach:{SearchDbCardsByTag:$0}{CreateHandCards:$ctx0,1}",,,,,,,,,,,,,,,,,,,,,,,,,
GetRandomWalkablePositionInEnv,随机一个空地,,,,GetRandomWalkablePositionInStage:,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BuffOverdrive,{qte:过载}{0}层后{1},,回合结束时，若该Buff超过指定层数，执行[后续效果]并清空这个Buff,,"evt.EndTurn:{>=:ThisBuffCount:,$0}{SerialRun:{$1};RemoveThisBuff:}",,,,,,,,,,,,,,,,,,,,,,,,,
SprdTakeDamage,造成{0}格范围{1}伤害,,,,Sprd:$0{TakeDamage:$1},,,,,,,,,,,,,,,,,,,,,,,,,
GetHalfOfHp,当前HP的一半,,,,$hp*50%,,,,,,,,,,,,,,,,,,,,,,,,,
DecreaseHalfHp,减少一半HP,,,,DecreaseHp:$hp*50%,,,,,,,,,,,,,,,,,,,,,,,,,
get_usingCardIndexInParentCardList,正在使用的卡牌在父列表中的索引号,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SetPosition,设置坐标为{0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DestroyCard,销毁{cn:0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MathMod,{0}除以{1}的余数,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PlaybackAnim,播放动画{0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SetModel,设置模型为{cha:0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
EqualsCard,{cn:0}等于{cn:1},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_target,目标,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DrawCardIns,抽卡{0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DestroyCardForever,永久销毁卡牌{cn:0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CreateHandCard,生成1张{cn:0}手牌,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//0.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SayMenu,说{0}并显示菜单{1}执行{2},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Say,说{0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Menu,显示菜单{0}执行{1},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_currentStageRewardMoney,当前地图的原石奖励数,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Format,字符串格式{0}，参数{1~8}....,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rndLivCha,随机一个活着的单位,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SetToTeammateOf,设置为{0}的友军,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SetToEnemyOf,设置为{0}的敌人,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SetToInitialTeam,设置队伍为初始,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SetToNeutralTeam,设置队伍为中立,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
QueueAnim,队列动画{0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PlotRunner,当交互时执行{0}情节,,,,evt.TakeInteraction:{RunPlot:{$0}},,,,,,,,,,,,,,,,,,,,,,,,,
PlotRunnerById,当交互时执行ID为{0}的情节,,,,evt.TakeInteraction:{RunPlotById:$0},,,,,,,,,,,,,,,,,,,,,,,,,
RunPlot,执行{0}情节,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RunPlotById,执行ID为{0}的情节,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SayFormat,说字符串格式{0}，{可选参数1~8},,,,"Say:{Format:$0,$1,$2,$3,$4,$5,$6,$7,$8}",,,,,,,,,,,,,,,,,,,,,,,,,
TeleportToConnectionOf,传送到与{0}连接的位置,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SearchCharacters,查找{filter:0}单位,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetCharacterCountByTeamId,取得{cmd:0}队伍的单位数量,,,,Count:{SearchCharacters:{teamId:$0}},,,,,,,,,,,,,,,,,,,,,,,,,
Player,玩家,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Monster,怪物,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_enemyTeamId,敌人队伍ID,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_teamId,队伍ID,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HasPlayerEnemyInStage,场景中有玩家的敌人,,,,">:{GetCharacterCountByTeamId:$mainPlayerCha.enemyTeamId},0",,,,,,,,,,,,,,,,,,,,,,,,,
interactor,交互者,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
itact,交互者,interactor的简写,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_interactor,交互者,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
LoadNextLevel,加载下一关,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
LoadNextStage,加载下一个场景,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ShowUIShop,原石加工器,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CreateChaAtRandomPos,在随机地方生成奖励单位{cha:0},,,,CreateCha:$0{GetRandomPositionInStageUnimpededFrom:$position},,,,,,,,,,,,,,,,,,,,,,,,,
GetRandomWalkablePositionInStageUnimpededFrom,随机场景中一个空地（保证从{0}到那个地方的是可以到达的）,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetRandomPositionInStageUnimpededFrom,随机场景中一个空地（保证从{0}到那个地方的是可以到达的）,,,,GetRandomWalkablePositionInStageUnimpededFrom:$0,,,,,,,,,,,,,,,,,,,,,,,,,
GetRandomWalkablePositionInStage,随机场景中一个空地,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
mainPlayerCha,主要玩家角色,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AllMonstersDie,所有怪物死亡,这是一个事件,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Switch,Switch{0}，case组{1},"例子：Switch:{RandomInt:1,4}{case:1{Log:'第一个'};case:2{Log:'第二个'};default:{Log:'默认的'}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,
RandomIntNum,从{0}到{1}的随机整数（包含{1},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetOrSetDataVar,取得存档变量{0}，没有的话就设置它为{1},,,,"If:{IsNull:{GetDataVar:$0}}{SetDataVar:$0,$1}",,,,,,,,,,,,,,,,,,,,,,,,,
GetOrSetVar,取得变量{0}，没有的话就设置它为{1},,,,"If:{IsNull:{GetVar:$0}}{SetVar:$0,$1}",,,,,,,,,,,,,,,,,,,,,,,,,
CreateDeckCard,生成{cn:0}到牌库,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SelectCardToCreateToDeckForever,从{0}中选择{1}张卡生成到牌库,,,,"SelectCardTo:{CreateDeckCardForever:$ctx0;ShowUIMessageStripFormat:""{cha:0}得到了{cn:1}"",$target,$ctx0;},$0;",,,,,,,,,,,,,,,,,,,,,,,,,
SelectSectionCardsToCreateToDeckForever,从卡池中的{0}张卡中选择{1}张卡生成到牌库,可以传递一个数字参数{2}作为种子，相同的种子会随机出相同的卡牌,,,"SelectCardToCreateToDeckForever:{SearchCards:{list:CurSection;random:$2;take:$0}},$1;",,,,,,,,,,,,,,,,,,,,,,,,,
CreateDeckCardForever,永久生成{cn:0}到牌库,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
host,宿主,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_host,宿主,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
set_nextCardSelectorAllowCancel,设置下一个卡牌选择器是否允许取消为{0},set_abc:true可以简化成$abc=true,,,,,,,,,,,,,,,,,,,,,,,,,,,,
set_hp,设置HP为{0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
set_maxHp,设置最大HP为{0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
set_energy,设置能量为{0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
set_maxEnergy,设置最大能量为{0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
set_stamina,设置体力为{0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
set_maxStamina,设置最大体力为{0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_modelId,模型ID,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetDataVar,取得存档变量{0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SetDataVar,设置存档变量{0}为{1},变量基于每个单位,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HasVar,有变量{0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetVar,取得变量{0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SetVar,设置变量{0}为{1},这是临时变量，过场景就没了。变量基于每个单位,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PlusDataVar,存档变量{0}的值+{1},,,,"SetDataVar:$0{+:{GetDataVar:$0},$1}",,,,,,,,,,,,,,,,,,,,,,,,,
PlusVar,变量{0}的值+{1},,,,"SetVar:$0{+:{GetVar:$0},$1}",,,,,,,,,,,,,,,,,,,,,,,,,
KeepHandCardsOnEndTurnByTag,回合结束后保留{cmd:0}类的手牌,,,,evt.PreEndTurn:{AvoidNextDiscardHandCardInstancesOnEndTurn:{SearchCards:{list:Hand;tag:$0}}};,,,,,,,,,,,,,,,,,,,,,,,,,
AvoidNextDiscardHandCardInstancesOnEndTurn,避免下次丢弃列表{0}中的手牌,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_turnCountSinceStart,从开始到现在的回合数,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SetBuffCount,设置Buff{cn:0}层数为{1},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ShowTutorial,显示教程{0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RunPlotOneshot,执行{1}情节（仅一次，用变量{0}来判定是否已经执行,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ShowTutorialOneshot,显示教程{0}（仅一次,,,,"RunPlotOneshot:{JoinStr:""ShowedTutorial"",$0},{ShowTutorial:$0};",,,,,,,,,,,,,,,,,,,,,,,,,
DestroySelf,销毁自己,这个销毁的是Character,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RecreateCharacter,重新生成单位{cha:0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HasEquipment,有装备{cn:0},,,,HasBuff:$0,,,,,,,,,,,,,,,,,,,,,,,,,
DestroyEquipmentForever,永久销毁装备{cn:0},,,,"DestroyCardForever:$0;RemoveBuff:$0,1",,,,,,,,,,,,,,,,,,,,,,,,,
DestroyEquipmentForeverIncludeConn,永久销毁装备{cn:0}（会同时销毁与目标连接的单位的装备,,,,DestroyEquipmentForever:$0;ConnDestroyEquipmentForever:$0;,,,,,,,,,,,,,,,,,,,,,,,,,
ConnDestroyCardForever,连接的单位永久销毁装备{cn:0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ConnRemoveBuff,连接的单位移除Buff{cn:0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ConnDestroyEquipmentForever,连接的单位永久销毁装备{cn:0},,,,"ConnRemoveBuff:$0,1;ConnDestroyCardForever:$0",,,,,,,,,,,,,,,,,,,,,,,,,
IsNull,{0}是空,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CreateDeckCardForeverWithMsg,永久生成{cn:0}到牌库,会显示消息,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ShowUIMessageStripFormat,显示消息：{0}（可选参数1~3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetRandomCardsByPoolTag,"卡池中随机{1}{opt:1,张}{cmd:0}类的卡牌",,,,"SearchCards:{list:pool,$0;random:;take:$1}",,,,,,,,,,,,,,,,,,,,,,,,,
GetAllCardsByPoolTag,卡池中全部{cmd:0}类的卡牌（会随机打乱,,,,"SearchCards:{list:pool,$0;}",,,,,,,,,,,,,,,,,,,,,,,,,
GetRandomCardByPoolTag,卡池中随机一张{cmd:0}类的卡牌,,,,FirstOrDefault:{GetRandomCardsByPoolTag:$0},,,,,,,,,,,,,,,,,,,,,,,,,
FirstOrDefault,列表{0}中的第一个元素,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ForceDie,强制死亡,强制死亡（就算是无敌的,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PropCard,道具卡,用于内部提示,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SetNextDropFilter,设置下一次掉落的查找过滤器,和SearchCards所用的过滤器一样,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ShowUICardReward,显示卡牌奖励UI（用{0}来配置UI,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AllowAI,设置是否允许使用AI为{0},用true表示「是」，false表示「不是」,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CardIsId,卡牌{0}的ID是{1},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SeedMoveNext,下一个种子,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DropCardRandomByPoolTag,随机掉落一张{cmd:0}类卡牌,,,,"DropCards:{SearchCards:{list:pool,$0;random:;take:1}}",,,,,,,,,,,,,,,,,,,,,,,,,
CreateChaRandomByPoolTagAtRandomPos,在随机位置随机生成一个{cmd:0}类单位,,,,Foreach:{SearchCharacters:{list:db;tag:$0;random:;take:1}}{CreateChaAtRandomPos:$ctx0},,,,,,,,,,,,,,,,,,,,,,,,,
SearchCharactersByPoolTag,在{0}类池中的通过{filter:1}来查找单位,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DropCards,掉落列表{0}中的所有卡牌,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_id,ID,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JoinStrToId,连接字符串{0}{1}并将它转换为ID,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
StrToId,将字符串{0}转换为ID,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CreateChaRandomByPoolTag,在{1}随机生成一个{cmd:0}类单位,,,,"Foreach:{SearchCharactersByPoolTag:$0{random:;take:1}}{CreateCha:$ctx0,$1}",,,,,,,,,,,,,,,,,,,,,,,,,
GetRandomChasByPoolTag,"池中随机{1}{opt:1,个}{cmd:0}类的单位",,,,"SearchCharactersByPoolTag:$0,{random:;take:$1}",,,,,,,,,,,,,,,,,,,,,,,,,
CreatePlayerTeammate,在{1}位置生成玩家队友{cha:0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SelectHandCardToCreateToHand,选择一张手牌将其复制到手牌,,,,"SelectCardTo:{CreateHandCard:$ctx0}{SearchCards:{list:Hand;}},1",,,,,,,,,,,,,,,,,,,,,,,,,
RunCommandForCharacter,对{1}使用指令{0},,,,With:$0{$1},,,,,,,,,,,,,,,,,,,,,,,,,
AvoidNextDrawCard,避免下次的抽卡,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SearchCharactersInDb,在数据库中使用{filter:0}查找单位,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Zombie,丧尸,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Craft,制作,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GiveAllHandCardsToSel,将所有手牌给予选中的单位,,,,"GiveCardsByFilterTo:$selectedTarget,{list:Hand}",,,,,,,,,,,,,,,,,,,,,,,,,
DropCard,掉落卡牌{cn:0},{1}可以写坐标，不写的话就是掉落在tgt附近,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SelectCharacterTo,选择角色执行指令，通过{0}来配置选择器,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AllowCreateDeadbody,设置是否允许在死后生成尸体为{0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CreateDeckCardForeverRandomByPoolTagWithMsg,永久生成随机一张{cmd:0}类卡牌到牌库,,,,"CreateDeckCardForeverWithMsg:{SearchCard:{list:pool,$0;random:} };",,,,,,,,,,,,,,,,,,,,,,,,,
GetCardCountInProp,取得{cn:0}道具卡的数量,,,,Count:{SearchCards:{list:Prop;id:$0}},,,,,,,,,,,,,,,,,,,,,,,,,
HasPropCard,有{cn:0}道具卡,,,,">=:{Count:{SearchCards:{list:Prop;id:$0}}},1",,,,,,,,,,,,,,,,,,,,,,,,,
HasPropCardCount,有{1}张{cn:0}道具卡,,,,">=:{Count:{SearchCards:{list:Prop;id:$0}}},$1",,,,,,,,,,,,,,,,,,,,,,,,,
MsgStrip,显示消息：{0}（可选参数1~3,,,,"ShowUIMessageStripFormat:$0,$1,$2,$3",,,,,,,,,,,,,,,,,,,,,,,,,
GetLocalVar,取得局部变量{0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SetLocalVar,设置局部变量{0}为{1},变量基于括号，出了括号就不能用了,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_dataMaxHp,存档最大Hp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_dataMaxEnergy,存档最大能量,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_dataMaxStamina,存档最大体力,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
set_dataMaxHp,设置存档最大Hp为{0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
set_dataMaxEnergy,设置存档最大能量为{0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
set_dataMaxStamina,设置存档最大体力为{0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SetMaxHpForever,永久设置最大HP为{0},,,,set_maxHp:$0;set_dataMaxHp:$0;,,,,,,,,,,,,,,,,,,,,,,,,,
MathRound,四舍五入{0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MathFloor,去掉小数点{0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MathCeil,去掉小数点{0}（如果成功就向上+1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetStageVar,取得场景变量{0},"变量基于房间,过一个房间就没了。",,,,,,,,,,,,,,,,,,,,,,,,,,,,
SetStageVar,设置场景变量{0}为{1},"变量基于房间,过一个房间就没了。",,,,,,,,,,,,,,,,,,,,,,,,,,,,
With,将$target变成{0}然后运行{1},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Turret,炮台,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ImmuneIncreaseHp,免疫增加HP,,,,evt.PreIncreaseHp:{CreaserAvoidNext:IncreaseHp},,,,,,,,,,,,,,,,,,,,,,,,,
ImmuneAllBuffs,免疫所有Buff,,,,evt.PreAddBuff:{CreaserAvoidNext:AddBuff},,,,,,,,,,,,,,,,,,,,,,,,,
get_targetPosition,目标位置,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AddBuffWithMsg,增加{1}层{cn:0},会显示消息,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bomb,炸弹,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
set_allowPlayerControl,设置是否允许玩家控制为{0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_allowPlayerControl,是允许玩家控制,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CharacterIsId,单位{0}的ID是{1},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ConvertToWalkablePosition,将坐标{0}转换为可移动的坐标,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BlockNextMove,禁止接下来的移动,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TakePushForceFromBack,受到来自后方的推力{0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JumpTo,跳跃到{0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetRandomWalkableOrTrapPositionInStageUnimpededFrom,随机场景中一个空地或陷阱的坐标（保证从{0}到那个地方的是可以到达的）,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Landmine,地雷,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Vector3Dot,{0}和{1}和点积,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DashToPosAndRunCmdWithBlocker,冲刺到{0}并对阻挡者执行{1},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DashToPosAndBlockerTakeDamage,冲刺到{0}并造成{1}伤害,会检测障碍物,,,DashToPosAndRunCmdWithBlocker:$0{tgt.TakeDamage:$1},,,,,,,,,,,,,,,,,,,,,,,,,
ShakeCamera,震动屏幕,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RemoveCardFromDataGainedCardList,将卡牌{cn:0}从存档获得的卡牌列表中移除,从商店、无人机获得了卡牌后，系统会将它记录，被记录的卡牌不会再次出现在卡池中。你可以把它移除，这样它又可以出现了,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AnyCharacterDie,某一个单位死亡,这是个事件，例子：evt.AnyCharacterDie:{Log:$arg0},,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetStageDbFieldAsString,取得场景字段{0}作为string,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetStageDbFieldAsAssetId,取得场景字段{0}作为AssetId,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DelayRun,延迟{0}秒执行{1},"注意：不要将它用在游戏性相关的指令，比如DelayRun:1,{AddBuff:17,1;}，这样在玩家操作得很快时，会出BUG。如果指令和游戏性相关，需要用DelayUpcomingEffects代替，。这个指令只会延迟特效，而游戏性相关的功能会瞬间执行。",,,,,,,,,,,,,,,,,,,,,,,,,,,,
IsId,是Id{0},检测tgt的Id是不是{0},,,,,,,,,,,,,,,,,,,,,,,,,,,,
RegexReplace,正则表达式替换：input{0}，pattern{1}，replacement{2},"例子，移除中间的横杠：Log:{RegexReplace:""abc--def"",""(.*)--(.*)"",""$1$2""}",,,,,,,,,,,,,,,,,,,,,,,,,,,,
RegexMatchGroup,正则表达式匹配组：input{0}，pattern{1}，groupIndex{2},"例子，取得后缀数字：Log:{RegexMatchGroup:""test234"",""[^\d]*(\d*)"",1}",,,,,,,,,,,,,,,,,,,,,,,,,,,,
SetNextCheckDisallowUseCard,设置下次检查是否禁止使用卡牌为{0},"用法，禁止使用卡牌：evt.PreCheckDisallowUseCard:{SetNextCheckDisallowUseCard:true}。如果要自定义消息的话，就SetNextCheckDisallowUseCard:true,'你不能使用这张卡';",,,,,,,,,,,,,,,,,,,,,,,,,,,,
CheckDisallowUseCard,检查是否禁止使用卡牌,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetCardCountInDataDeck,取得{cn:0}在存档牌库的数量,,,,Count:{SearchCards:{list:DataDeck;id:$0}},,,,,,,,,,,,,,,,,,,,,,,,,
GetCard,取得ID为{0}的卡牌对象,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SetModelToDroppedCard,设置模型为掉落的卡牌{cn:0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DelayUpcomingEffects,延迟{0}秒从{1}里产生的特效,"专门用于延迟动画和特效。和DelayRun差不多，只不过功能性指令（比如TakeDamage）是瞬间完成的，只有特效被延迟了。例子：「DelayUpcomingEffects:0.5{TakeDamage:1}; 」解释：TakeDamage的特效（冒数字）会延迟0.5秒，但伤害是瞬间发生的",,,,,,,,,,,,,,,,,,,,,,,,,,,,
InvokeBuffEvent,执行事件{0}，可选参数{1}{2}{3},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AnyCharacterInit,任意单位初始化,例子，当某个单位初始化时，那个单位受到1伤害：evt.AnyCharacterInit:{With:$arg0{TakeDamage:1}},,,,,,,,,,,,,,,,,,,,,,,,,,,,
PreMoveTo,即将移动到{0},例子，禁止移动：evt.PreMoveTo:{AvoidNextMoveTo:},,,,,,,,,,,,,,,,,,,,,,,,,,,,
AvoidNextMoveTo,禁止下次的移动到,例子，禁止移动：evt.PreMoveTo:{AvoidNextMoveTo:},,,,,,,,,,,,,,,,,,,,,,,,,,,,
PreDie,即将死亡,例子，禁止死亡：evt.PreDie:{AvoidNextDie:},,,,,,,,,,,,,,,,,,,,,,,,,,,,
AvoidNextDie,禁止下次的死亡,例子，禁止死亡：evt.PreDie:{AvoidNextDie:},,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetCardPrice,取得{cn:0}的价格,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AvoidNextDiscardHandCardInsOnEndTurn,避免下次回合结束丢弃手牌{0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PlayerEndTurn,玩家结束回合,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Elec,电,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ElecSuit,{qte:'套装：脉冲循环'},,收集手臂型线圈组、生命支持矩阵以激活，每回合+1能量，造成的伤害+1,,"evt.StartTurn:{And:{HasBuff:254},{HasBuff:255}}{IncreaseEnergy:1};evt.PreApplyDamage:{And:{HasBuff:254},{HasBuff:255}}{CreaserIncreaseNext:ApplyDamage,1}",,,,,,,,,,,,,,,,,,,,,,,,,
DecreaseAllEnergy,,,,,DecreaseEnergy:$energy,,,,,,,,,,,,,,,,,,,,,,,,,
ShopRefreshCards,商店刷新卡牌,这个指令需要对准商店单位使用,,,,,,,,,,,,,,,,,,,,,,,,,,,,
set_dataPlayerMoney,设置玩家原石数为{0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_dataPlayerMoney,取得玩家原石数,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SetModelAlpha,将模型的不透明度设置为{0}(范围0~1),,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ShopCloseUI,关闭商店UI,这个指令需要对准商店单位使用,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Shuffle,牌库洗牌,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MoveTo,移动到{0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Not,不是{0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetCharacterAtPosition,取得坐标为{0}的单位,坐标{0}可以是一个单位，也可以是一个Vector3，是单位的话，就会取得它的坐标并自动转成Vector3,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetCharactersAtPosition,取得坐标为{0}的单位列表,坐标{0}可以是一个单位，也可以是一个Vector3，是单位的话，就会取得它的坐标并自动转成Vector3,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NewVector3,新建一个x为{0}、y为{1}、z为{2}的向量,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetPositionX,取得坐标{0}的X轴,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetPositionY,取得坐标{0}的Y轴,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetPositionZ,取得坐标{0}的Z轴,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NewList,新建一个列表,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ListGetElem,取得列表的第{0}项,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ListAdd,列表{0}添加{1},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ListRemove,列表{0}移除{1},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ListRemoveAt,列表{0}移除第{1}项,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ListContains,列表{0}是否包含{1},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ListIndexOf,取得列表{0}中{1}的序号,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ListClear,列表{0}清空,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ListCount,取得列表{0}的元素数量,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
set_selectedPosition,设置选中的坐标为{0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ReloadStage,重新加载当前场景,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Nanba,南坝,这不是指令，而是名词,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NanbaPattern,南坝形态,这不是指令，而是名词,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_visualPosition,取得坐标（只是显示上的）,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
set_visualPosition,设置坐标为{0}（只是显示上的）,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SelectDbCardsByTagToAddBuff,选择{1}张{cmd:0}类Buff来获得,,,,"SelectDbCardsByTagTo:{AddBuff:$ctx0,1},$0,$1;",,,,,,,,,,,,,,,,,,,,,,,,,
RunCardForSelf,对自己执行{cn:0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RemoveDataFromStage,将存档从关卡中移除,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CreateTeammateTemp,在{1}生成临时队友{cha:0},,,,"With:{CreateTeammate:$0,$1}{RemoveDataFromStage:}",,,,,,,,,,,,,,,,,,,,,,,,,
CreateTeammateFollower,在{1}生成队友{cha:0},这个队友可以跟随玩家到别的房间,,,"With:{CreateTeammate:$0,$1}{$allowFollowPlayerToOtherStage=true}",,,,,,,,,,,,,,,,,,,,,,,,,
Machine,机械,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Animal,动物,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ReloadGame,重新加载游戏,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AnimalOnlyBuff,动物专用Buff,,,,"evt.PreAddThisBuff:{Not:{CharacterHasTag:$buffHost,Animal}}{CreaserAvoidNext:AddBuff}",,,,,,,,,,,,,,,,,,,,,,,,,
GetCardEnergyReq,取得{cn:0}的能量需求,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetCardRange,取得{cn:0}的射程,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
LoadLevel,加载id为{0}的关卡,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IncreaseMainPlayerChaExp,增加玩家经验{0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_allowAIKeepDistanceFromTarget,取得AI是否允许与目标保持距离,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
set_allowAIKeepDistanceFromTarget,设置AI是否允许与目标保持距离为{0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
While,只要{0}为true，就循环执行{1},"例子：While:{<=:{GetVar:test},10}{PlusVar:test,1;Log:{GetVar:test};}",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Break,中断While或Repeat,"例子：While:{True:}{PlusVar:test,1;Log:{GetVar:test};If:{>=:{GetVar:test},10}{Break:}; }",,,,,,,,,,,,,,,,,,,,,,,,,,,,
True,是,例子：If:{True:}{Log:是;}{Log:不是},,,,,,,,,,,,,,,,,,,,,,,,,,,,
False,否,例子：If:{False:}{Log:是;}{Log:不是},,,,,,,,,,,,,,,,,,,,,,,,,,,,
Null,空,例子：Log:{Null:},,,,,,,,,,,,,,,,,,,,,,,,,,,,
SearchCharacter,查找{filter:0}单位,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DBHW,隐藏对话框并等待{0}秒,,,,DialogBoxHide:;Wait:$0;,,,,,,,,,,,,,,,,,,,,,,,,,
IsDanger,是否在敌人的攻击范围内,例子：Log:{user.IsDanger:},,,,,,,,,,,,,,,,,,,,,,,,,,,,
DestroyAllCards,销毁全部卡牌,,,,Foreach:{SearchCards:{list:Deck;list:Prop;list:Discarded;list:Hand}}{DestroyCardIns:$ctx0;};,,,,,,,,,,,,,,,,,,,,,,,,,
GetChaCountById,取得{cha:0}的数量,,,,Count:{GetChasById:$0},,,,,,,,,,,,,,,,,,,,,,,,,
GetChasById,取得所有{cha:0},,,,SearchCharacters:{id:$0},,,,,,,,,,,,,,,,,,,,,,,,,
DialogBoxFollow,对话框跟随{0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RunPlot_DroppedItem,掉落物专用，请勿使用,掉落物专用，请勿使用,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TutorialFollow,教程专用，请勿使用,教程专用，请勿使用,,,"SetLocalVar:obj,$0;DialogBoxFollow:$obj;SetActiveUIObj:$obj,true;",,,,,,,,,,,,,,,,,,,,,,,,,
TutorialSetup,教程专用，请勿使用,教程专用，请勿使用,,,"SetActiveUIObjChildren:$uiScreenHudRoot,false; SetActiveUIObj:$uiWorldHudRoot,false; Foreach:{mainPlayerCha.SearchCharacters:{team}}{With:$ctx0{$allowApplyInteraction=false; DestroyAllCards:;}};",,,,,,,,,,,,,,,,,,,,,,,,,
SetActiveUIObj,设置是否启用UI物体{0}为{1},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SetActiveUIObjChildren,设置是否启用UI物体的所有子物体{0}为{1},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HideVisual,隐藏模型和UI,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UnhideVisual,不隐藏模型和UI,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wait,等待{0}秒,只能用在Plot里,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetPoint,取得Point{0}的坐标,在Tiled里建一个名叫「Point」的图层，然后建一些方框名字写XXX，再GetPoint:XXX取得它的坐标,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DialogBoxHide,隐藏对话框,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_uiScreenHudRoot,屏幕上全部Hud的根,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_uiWorldHudRoot,场景中全部Hud的根,比如会跟着单位模型移动的血条、buff之类的,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_uiWorldHpBar,场景中单个单位的Hp条,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_uiWorldEnergyBar,场景中单个单位的能量条,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_uiWorldStaminaBar,场景中单个单位的体力条,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_uiUndoMoveButton,撤销按钮,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_uiEndTurnButton,结束回合按钮,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_uiSwitchCharacterButton,切换角色按钮,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_uiSkipAIVisualInThisRoundButton,跳过回合按钮,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WaitUntil,等待直到{0}为true,只能用在Plot里,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SetDialogMode,设置对话框模式为{0},0是普通、1是开场剧情样式、2是会跟随的对话框,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetUIHandCard,取得序号为{0}的UI手牌,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DialogBoxClose,关闭对话框,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CameraLookTo,相机看向{0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_mainPlayerCha,主要玩家角色,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetOffset,"取得坐标{0}的偏移,x偏移{1},y偏移{2},z偏移{3}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
set_allowApplyInteraction,设置是否允许应用交互为{0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RunCardWithVisual,执行卡牌{cn:0}（带动画特效,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AllowPlayerChasApplyInteraction,设置是否允许玩家的角色们应用交互为{0},,,,Foreach:{mainPlayerCha.SearchCharacters:{team}}{With:$ctx0{set_allowApplyInteraction:$0}},,,,,,,,,,,,,,,,,,,,,,,,,
TakeInteraction,接受交互,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SetPackageDataVar,设置资源包存档变量{0}为{1},"变量基于资源包,这意味着它可以跨越每局游戏甚至资源包里的每个角色",,,,,,,,,,,,,,,,,,,,,,,,,,,,
HasPackageDataVar,是否有资源包存档变量{0},"变量基于资源包,这意味着它可以跨越每局游戏甚至资源包里的每个角色",,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetPackageDataVar,取得资源包存档变量{0},"变量基于资源包,这意味着它可以跨越每局游戏甚至资源包里的每个角色",,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_mainPlayerFocusedCha,主要玩家聚焦的角色,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PlayMusic,播放音乐{0},如果播放同一个音乐不会重新开始,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PlaybackMusic,回放音乐{0},即时播放同一个音乐，也会重新开始,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_allowAIMoveBeforeUseCard,是否允许AI在使用卡牌之前移动,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
set_allowAIMoveBeforeUseCard,设置是否允许AI在使用卡牌之前移动为{0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_allowAIMoveAfterUseCard,是否允许AI在使用卡牌之后移动,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
set_allowAIMoveAfterUseCard,设置是否允许AI在使用卡牌之后移动为{0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ShowTip,在{0}位置显示提示{1},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CloseTip,关闭提示,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TipWaitUntil,在{0}位置显示提示{1}并等待直到{2}，然后关闭提示,,,,"ShowTip:$0,$1; WaitUntil:$2; CloseTip:;",,,,,,,,,,,,,,,,,,,,,,,,,
GetVarEntirely,取得变量{0},依次使用GetLocalVar、GetCardDataVar、GetVar、GetDataVar查找，直到找到名叫{0}的变量。GetVarEntirely:xxx的简化是$xxx,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UnpauseMusic,取消暂停音乐,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PauseMusic,暂停音乐,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ShowFullscreenCutsceneEffect,播放全屏过场动画{0},过场动画用unity的Timeline编辑器制作，做好后放到Effect文件夹里，{0}是id,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MonsterPowerUpByGameRound,怪物根据轮回数增加能力,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ForceSetPosition,强制设置坐标为{0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MathAbs,取得{0}的绝对值,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AddCardToDataGainedCardList,将卡牌{cn:0}添加到存档获得的卡牌列表中,从商店、无人机获得了卡牌后，系统会将它记录，被记录的卡牌不会再次出现在卡池中。,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_allowPlayerInputRotateCamera,是否允许玩家旋转相机,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
set_allowPlayerInputRotateCamera,设置是否允许玩家旋转相机为{0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ShowProjectileEffect,显示发射物特效，id为{0}，起点为{1}，终点为{2},"例子：ShowProjectileEffect:12,$user,$target",,,,,,,,,,,,,,,,,,,,,,,,,,,,
SetAmbientColor,设置环境光颜色：r是{0}、g是{1}、b是{2},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SetPackageVar,设置资源包变量{0}为{1},"变量基于资源包,这意味着它可以跨越每局游戏甚至资源包里的每个角色，注意：变量是临时的，关掉游戏就没了。另外，临时变量支持任何类型的数据",,,,,,,,,,,,,,,,,,,,,,,,,,,,
HasPackageVar,是否有资源包变量{0},"变量基于资源包,这意味着它可以跨越每局游戏甚至资源包里的每个角色，注意：变量是临时的，关掉游戏就没了。另外，临时变量支持任何类型的数据",,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetPackageVar,取得资源包变量{0},"变量基于资源包,这意味着它可以跨越每局游戏甚至资源包里的每个角色，注意：变量是临时的，关掉游戏就没了。另外，临时变量支持任何类型的数据",,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetDbField,"取得 表格为{0}、id为{1}、表头为{2} 的值","例子取得ID为1的卡牌名字：Log:{GetDbField:Card,1,displayName};",,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetDbFieldAsAssetId,"取得 表格为{0}、id为{1}、表头为{2} 的值，这个值会作为Id返回",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetDirection,取得从{0}到{1}的方向,返回一个Vector3向量,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TakeImpulse,受到冲击力，距离为{0}，方向为{1},"例子1：tgt.TakeImpulse:5,{GetDirection:$user,$target};
例子2：user.TakeImpulse:5,{GetDirection:$user,$selPos}
提示：这个指令支持CreaserXXX，比如evt.PreTakeImpulse:{CreaserIncreaseNext:TakeImpulse,1}",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Vector3Plus,向量{0}+向量{1},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Vector3Minus,向量{0}-向量{1},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Vector3Multiply,向量{0}*向量{1},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Vector3Divide,向量{0}/向量{1},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Vector3MultiplyFloat,向量{0}的xyz分别*数字{1},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Vector3DivideFloat,向量{0}的xyz分别/数字{1},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetVector3X,取得向量{0}的X轴,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetVector3Y,取得向量{0}的Y轴,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetVector3Z,取得向量{0}的Z轴,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Vector3Normalize,取得向量{0}的单位化,单位化的意思是不管向量多长，都只会返回一格长度的向量,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Vector3Magnitude,取得向量{0}的长度,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
set_nextUseCardPlaybackAnimId,设置下次用卡动画为{0},可以在即将播放动画之前，将那个动画ID改成另一个动画，例子：evt.PreUseCardPlaybackAnim:{set_nextUseCardPlaybackAnimId:$0};,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SpreadRun_ShapeTex,扩散执行,"和SpreadRun一样。

变种1：形状贴图id{0}，扩散执行{1};
变种2：形状贴图id{0}，形状方向{1}，执行{2};
变种3：中心坐标{0}，形状贴图id{1}，形状方向{2}，执行{3}; 

例子1：SpreadRun_ShapeTex:1,{Log:$tgt};
例子3：SpreadRun_ShapeTex:$selPos,1,{GetDirection:$user.position,$selPos},{Log:$tgt};",,,,,,,,,,,,,,,,,,,,,,,,,,,,
ShowText,显示文字{0},"一般结合Wait使用，比如显示文字，等待2秒继续：ShowText:""xxxx""; Wait:2;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
AllowAutoHideWorldUI,设置是否自动隐藏世界UI为{0},"世界UI就是每个单位的血条、BUFF之类的UI,例子：tgt.AllowAutoHideWorldUI:false",,,,,,,,,,,,,,,,,,,,,,,,,,,,
CreateDbCard,生成一张卡到数据库，表头集合是{0},"例子：
Log:{CreateDbCard:{
  id:abcde;
  displayName:test;
  tagCode:{PosiBuff;Interactable};
  code:{evt.TakeInteraction:{Log:$tgt}};
}};",,,,,,,,,,,,,,,,,,,,,,,,,,,,
CreateDbCardAndRunForSelf,生成一张卡到数据库，表头集合是{0}，再把这张卡对着自己运行,"例子：
tgt.CreateDbCardAndRunForSelf:{
  id:abcde;
  displayName:test;
  tagCode:{PosiBuff;Interactable};
  code:{evt.TakeInteraction:{Log:$tgt}};
};",,,,,,,,,,,,,,,,,,,,,,,,,,,,
AddPlotCode,添加剧情代码{0},"例子：
tgt.AddPlotCode:{Say:""233"";};",,,"CreateDbCardAndRunForSelf:{
  notAllowBakeValuesOnInitFields:true;
  tagCode:{Interactable;Equipment};
  code:{
   PlotRunner:{$0};
  };
};",,,,,,,,,,,,,,,,,,,,,,,,,
SetCardDataVar,设置卡牌{0}的变量{1}为{2},变量基于卡牌存档,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetCardDataVar,取得卡牌{0}的变量{1},变量基于卡牌存档,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PlusCardDataVar,卡牌{0}的变量{1}增加{2},变量基于卡牌存档,,,"SetCardDataVar:$0,$1,{+:{GetCardDataVar:$0,$1},$2};",,,,,,,,,,,,,,,,,,,,,,,,,
CreateHandCardForever,永久生成手牌{cn:0},,,,DrawCardIns:{CreateDeckCardForever:$0;};,,,,,,,,,,,,,,,,,,,,,,,,,
GetThisCardField,取得这张卡牌的字段{0}的值,,,,"GetCardField:$card,$0",,,,,,,,,,,,,,,,,,,,,,,,,
GetCardField,取得卡牌{0}的字段{1}的值,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PlusLocalVar,局部变量{0}增加{1},,,,"SetLocalVar:$0,{+:{GetLocalVar:$0},$1};",,,,,,,,,,,,,,,,,,,,,,,,,
//CardContainerFill,这个指令搬到Plot/CardContainer.ason里了,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//CardContainer,这个指令搬到Plot/CardContainer.ason里了,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SetCardFields,"设置卡牌{0}的字段,参数组{1}","例子：SetCardFields:$card,{displayName:xxx;energyReq:3};",,,,,,,,,,,,,,,,,,,,,,,,,,,,
SetCardFieldsForever,"永久设置卡牌{0}字段,参数组{1}","例子：SetCardFieldsForever:$card,{displayName:xxx;energyReq:3};",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Trap,陷阱,名词,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BulletCraft,子弹制作,名词,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SetCardVar,设置卡牌{0}的变量{1}为{2},变量基于卡牌,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetCardVar,取得卡牌{0}的变量{1},变量基于卡牌,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IsNullOrEmpty,"{0}是Null或者""""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SetCardInsToHand,将卡牌{0}设置到手牌,比如可以把某个弃牌堆的卡牌设置到手牌，$0需要是卡牌对象，而不是卡牌ID,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_allowFollowPlayerToOtherStage,取得是否允许跟随玩家到其它房间,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
set_allowFollowPlayerToOtherStage,设置是否允许跟随玩家到其它房间为{0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_currentLevelId,取得当前关卡id,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_allowAIWanderIfNoTarget,取得是否允许AI在没有目标时游荡,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
set_allowAIWanderIfNoTarget,设置是否允许AI在没有目标时游荡为{0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
LoadStage,加载id为{0}的房间,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PlayerSwitchCharacter,切换当前玩家控制的角色为{0},{1}为相机是否跟随，可以不写，默认为true,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_propCardCount,取得道具卡数量,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CloneCardIns,克隆卡牌实体{0},"「SetCardInsOwnerCha:{CloneCardIns:$card},$tgt;」和「CreateDeckCard:$cardId」的区别在于，这个会把卡牌变量一起复制",,,,,,,,,,,,,,,,,,,,,,,,,,,,
SetCardInsOwnerCha,设置卡牌实体{0}的所有者为{1},"例子，复制这张卡并送给目标：SetCardInsOwnerCha:{CloneCardIns:$card},$tgt",,,,,,,,,,,,,,,,,,,,,,,,,,,,
SetCardInsOwnerChaForever,永久设置卡牌实体{0}的所有者为{1},"例子，复制这张卡并送给目标：SetCardInsOwnerChaForever:{CloneCardIns:$card},$tgt",,,,,,,,,,,,,,,,,,,,,,,,,,,,
ChaSerialRun,和SerialRun类似，只不过这个是基于单位的，用变量ID{0}来检测是不是同一帧，不是的话就执行{1},,,,"If:{!=:{GetVar:$0},$frameCount}{SetVar:$0,$frameCount;$1;};",,,,,,,,,,,,,,,,,,,,,,,,,
get_frameCount,取得从游戏开启到现在的帧数,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AddElecBuff,获得{1}层{cn:0},电系专用,,,"AddBuff:$0,$1;

If:{HasCharacterAtPosition:445,$position;}{
	AddBuff:$0,$1;
};",,,,,,,,,,,,,,,,,,,,,,,,,
SetAppVar,设置程序变量{0}为{1},变量基于程序运行，关掉游戏就没了,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetAppVar,取得程序变量{0},变量基于程序运行，关掉游戏就没了,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PlusAppVar,程序变量{0}增加{1},变量基于程序运行，关掉游戏就没了,,,"SetAppVar:$0{+:{GetAppVar:$0},$1}",,,,,,,,,,,,,,,,,,,,,,,,,
SetCrossedVar,设置跨越变量{0}为{1},变量基于程序运行，并基于单位，即使读档也不会还原，不过关掉游戏再读档就会还原,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetCrossedVar,取得跨越变量{0},变量基于程序运行，并基于单位，即使读档也不会还原，不过关掉游戏再读档就会还原,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PlusCrossedVar,跨越变量{0}增加{1},变量基于程序运行，并基于单位，即使读档也不会还原，不过关掉游戏再读档就会还原,,,"SetCrossedVar:$0{+:{GetCrossedVar:$0},$1}",,,,,,,,,,,,,,,,,,,,,,,,,
PlaySound,播放id是{0}的音效,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HasCharacterAtPosition,在坐标是{0}的地方是否存在单位{1},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ShowUIGameDataToLoad,显示读档UI,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AvoidNext,避开下次{0}（是CreaserAvoidNext的简化,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Expirable,{qte:保质期}{0}回合,,这张卡N回合后会被自动永久销毁,,"evt.StartTurn:{>=:{PlusThisCardDataVar:expirationCount,1},$0}{
	DestroyThisCardForever:;
};
SetupThisCardHelperBuff:;
",,,,,,,,,,,,,,,,,,,,,,,,,
SetupThisCardHelperBuff,安装这张卡的HelperBuff,添加一个隐藏的buff，让这张卡拥有被事件触发的特性。正常情况下一张卡只有被添加为Buff才能被触发事件，给卡牌代码添加了SetupCardHelperBuff:;，就可以让它在手牌、牌库也触发事件,,,evt.InitThisDeckCard:{
	AddCardHelperBuff:$card
};
evt.DestroyThisCard:{
	RemoveCardHelperBuff:$card
};,,,,,,,,,,,,,,,,,,,,,,,,,
AddCardHelperBuff,添加卡牌{0}的HelperBuff,添加一个隐藏的buff，让这张卡拥有被事件触发的特性。正常情况下一张卡只有被添加为Buff才能被触发事件，给卡牌代码添加了SetupCardHelperBuffOnInit:;，就可以让它在手牌、牌库也触发事件,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RemoveCardHelperBuff,移除卡牌{0}的HelperBuff,添加一个隐藏的buff，让这张卡拥有被事件触发的特性。正常情况下一张卡只有被添加为Buff才能被触发事件，给卡牌代码添加了SetupCardHelperBuffOnInit:;，就可以让它在手牌、牌库也触发事件,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ExpirableOneOffCard,{qte:临时卡},,结束本回合后，这张卡会永久销毁，使用这张卡也会被永久销毁,,Expirable:1;OneOffCard:;,,,,,,,,,,,,,,,,,,,,,,,,,
evt.DestroyThisCardForever,永久销毁这张卡,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
evt.DestroyThisCard,销毁这张卡,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RunCardWithSimpleVisual,对{cha:1}执行{cn:0},没有卡牌飞行特效和使用卡牌动画,,,"CreaserAvoidNext:ShowEffectUIUseCardFly;//不要播放手牌飞行特效
CreaserAvoidNext:PlaybackUseCardAnim;//不要播放角色使用卡牌动画
CreaserSetNext:useCardEffectDelay,0;//将使用卡牌特效延迟改为0
RunCardWithVisual:$0,$1;",,,,,,,,,,,,,,,,,,,,,,,,,
GetCardCount,取得卡牌{cn:0}的数量,包括了手牌、牌库、弃牌堆、道具,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KeepThisCardOnEndTurn,{qte:保留},,在结束回合的时候，这张卡不会被自动丢弃,,evt.PreEndTurn:{
	AvoidNextDiscardHandCardInsOnEndTurn:$card;
};
SetupThisCardHelperBuff:;,,,,,,,,,,,,,,,,,,,,,,,,,
HasRemapArg,是否有remapCode的参数{0},用于检查是否传递了参数，例子：{HasRemapArg:$1},,,,,,,,,,,,,,,,,,,,,,,,,,,,
Suit,{qte:套装},,每个单位只能同时装备一个套装,,"evt.StartCombat:{
	DestroyThisCard:;
	AddBuffIns:$card;
	
	//AddBuff:$cardId;
	//user.DestroyThisCard:;
};
//移除所有同类的装备
evt.PreAddThisBuff:{
	Foreach:{SearchCards:{list:Buff;tag:Suit}}{
		DestroyCardForever:$ctx0;
		RemoveBuff:$ctx0,1;
	};
};

DestroyThisCard:;",,,,,,,,,,,,,,,,,,,,,,,,,
Medi,医药,名词,,,,,0.5,,,,,,,,,,,,,,,,,,,,,,,
SearchCharacterCount,"查找单位数量,过滤器是{0}",,,,Count:{SearchCharacters:{$0}},,,,,,,,,,,,,,,,,,,,,,,,,
SetAppDataVar,设置程序存档变量{0}为{1},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetAppDataVar,取得程序存档变量{0},,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PlusAppDataVar,程序存档变量{0}加{1},,,,"SetAppDataVar:$0,{+:{GetAppDataVar:$0},$1};",,,,,,,,,,,,,,,,,,,,,,,,,
CardSerialRun,和SerialRun类似，SerialRun用于禁止多层buff在同一帧执行多次指令，CardSerialRun用于禁止同一张卡牌在同一帧执行多次（比如可以用于防止怪物的尖刺外壳和玩家的刺盾无限反射伤害，造成无限循环,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_hatingEnemy,取得仇恨的敌人单位,当受到伤害，仇恨单位会被系统自动设置为攻击者,,,,,,,,,,,,,,,,,,,,,,,,,,,,
set_hatingEnemy,设置仇恨的敌人单位为{0},当受到伤害，仇恨单位会被系统自动设置为攻击者,,,,,,,,,,,,,,,,,,,,,,,,,,,,
get_defaultPerferredEnemy,取得默认首选敌人单位,如果无法攻击到hatingEnemy，会使用defaultPerferredEnemy作为仇恨单位,,,,,,,,,,,,,,,,,,,,,,,,,,,,
set_defaultPerferredEnemy,设置默认首选敌人单位为{0},如果无法攻击到hatingEnemy，会使用defaultPerferredEnemy作为仇恨单位,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetBuffCardIns,取得id为{0}的buff卡牌实体,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
evt.StartTurn,当开始回合,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
evt.FirstStartTurn,当每场战斗第一次开始回合,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
evt.DrawCardsForStartTurn,当开始回合时抽卡,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
evt.PreEndTurn,当即将结束回合,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
evt.AllPlayersDie,全局事件，当所有玩家单位死亡,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
evt.AllMonstersDie,全局事件，当所有怪物死亡,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
evt.AnyCharacterDie,全局事件，当某个单位死亡，$arg0是死亡的那个单位,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
evt.CreateThisDeckCard,当这张卡生成到牌库,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
evt.CreateDeckCard,当生成卡牌到牌库，$arg0是卡牌id,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
evt.AnyCharacterCreateDeckCard,全局事件，当某个单位生成卡牌到牌库，$arg0是单位，$arg1是卡牌id,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
evt.CreateDeckCardForever,当永久生成卡牌到牌库，$arg0是卡牌id,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
evt.CreateThisDeckCardForever,当这张卡永久生成到牌库,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
evt.InsertDeckCard,当卡牌插入到牌库，$arg0是卡牌id，$arg1是它在牌库的序号,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
evt.DestroyCard,当销毁卡牌，$arg0是id,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
evt.DiscardThisHandCard,当这张卡被丢弃（注意丢弃不是丢在地面，而是丢到弃牌堆,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
evt.DiscardHandCard,当丢弃手牌，$arg0是卡牌实体,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
evt.PreDrawCard,当即将抽卡，$arg0是卡牌id,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
evt.DrawThisCard,当抽到这张卡,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
evt.DrawCard,当抽卡，$arg0是卡牌id,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
evt.CreateHandCard,当生成手牌，$arg0是卡牌id,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
evt.PreCheckDisallowUseCard,当即将检查是否禁止使用卡牌，$arg0是卡牌id,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
evt.PreCheckDisallowUseThisCard,当即将检查是否禁止使用这张卡,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
evt.PreUseCardCheckEnergy,当即将在使用卡牌的时候检查卡牌的能量，$arg0是卡牌id,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
evt.PreUseThisCard,当即将使用这张卡,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
evt.PreUseCard,当即将使用卡牌，$arg0是卡牌id,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
evt.UseThisCard,当使用这张卡,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
evt.UseCard,当使用卡牌，$arg0是卡牌id,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
evt.Revive,当复活,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
evt.PreMoveTo,当即将移动到某个点，$arg0是坐标，类型是Vector3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
evt.MoveTo,当移动到某个点，$arg0是坐标，类型是Vector3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
evt.PreSetPosition,当即将设置单位的坐标，$arg0是坐标，类型是Vector3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
evt.SetPosition,当设置单位的坐标，$arg0是坐标，类型是Vector3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
evt.StartCombat,当开始战斗（只要进入场景就会触发，也会触发在没有怪物场景,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
evt.PreDrop,当即将掉落（通常是道具,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
evt.PreDie,当即将死亡,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
evt.Die,当死亡,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
evt.ApplyInteraction,当施加交互，$arg0是目标单位实体,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
evt.SetVar,当设置变量，$arg0是变量名，$arg1是值,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
evt.SetDataVar,当设置存档变量，$arg0是变量名，$arg1是值,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
evt.ApplyDamage,当造成伤害，$arg0是值,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
evt.ApplyHeal,当造成回复，$arg0是值,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
evt.ApplyBuff,当施加buff，$arg0是卡牌id，$arg1是数量,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
evt.ApplyImpulse,当施加冲击，$arg0是力度(float)，$arg1是方向(Vector3),,,,,,,,,,,,,,,,,,,,,,,,,,,,,
evt.TakeTread,当造成踩踏，$arg0是被踩的单位（进入和离开都会触发,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
evt.TakeTreadExit,"当造成踩踏，$arg0是被踩的单位（只有进入会触发 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
evt.TakeTreadEnter,"当造成踩踏，$arg0是被踩的单位（只有离开会触发 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
evt.PreAddThisBuff,当即将获得这个buff，$arg0是卡牌id，$arg1是数量,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
evt.AddThisBuff,当获得这个buff，$arg0是卡牌id，$arg1是数量,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
evt.CreateTeammate,当生成队友，$arg0是单位实体，$arg1是坐标(Vector3),,,,,,,,,,,,,,,,,,,,,,,,,,,,,
evt.CreateEnemy,当生成敌人，$arg0是单位实体，$arg1是坐标(Vector3),,,,,,,,,,,,,,,,,,,,,,,,,,,,,
evt.CreateNeutralCharacter,当生成中立单位，$arg0是单位实体，$arg1是坐标(Vector3),,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"//zerOne TURN",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ZOT○Filler,填充卡,,,,"evt.InitThisDeckCard:{SetCardVar:FillCount,$0;SetCardVar:MaxFillCount,$1};
evt.UseThisCard:{SetCardVar:FillCount{$FillCount-1}}",,,,,,,,,,,,,,,,,,,,,,,,,
